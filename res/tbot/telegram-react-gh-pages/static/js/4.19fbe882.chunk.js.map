{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Assets/Icons/Close.js","Stores/PlayerStore.js","Utils/User.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Components/Viewer/FileProgress.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Assets/Icons/Download.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VideoNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","loadAnimationContent","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","loadVideoContent","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","createSvgIcon","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","getRandomInt","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","worker","PakoWorker","handlers","inflateBlob","random","toString","slice","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextProps","nextState","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","thumbnailSrc","src","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","icon","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","replace","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","startsWith","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","blocks","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","mime_type","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","playerDuration","Infinity","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","stop","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","min","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","onChange","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","opacity","DocumentAction","Download","thumb","viewBox","data-name","data-ext","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","element","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","focus","searchResultsMap","filteredResults","foundChats","aria-describedby","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","label","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","ANIMATION_DURATION_100MS","SidebarPage","remove","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","withTheme","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","removeItem","clear","cache","contacts","CacheManager","saveChatsInternal","load","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateContacts","openContacts","onClientUpdateSettings","openSettings","meChatId","onClientUpdateArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsHeaderRef","setInitQuery","scrollToTop","visible","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","handleCancel","onCancel","textRef","urlRef","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","readImageSize","photoWidth","photoHeight","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaFromFile","setFormattedText","getRangeAt","has_stickers","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","handleDoneEditMedia","editMessageMedia","performance","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onSendInternal","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","replyMessage","disableNotification","disable_notification","pinMessage","handleEdit","editMessage","selectMessage","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateChatBackground","wallpaperSrc","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","onClientUpdateDocumentBlob","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.19fbe882.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background);\n    });\n}\n\nexport function loadBackgroundContent(store, background) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.windowFocused &&\n                ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                    (this.ivInView && !this.openIVMedia))\n            ) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            src={src}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioShortTitle(audio);\n        const audioSubtitle = getAudioSubtitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action'>{audioSubtitle}</div>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(update.currentTime, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(update.currentTime, playerDuration, active);\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(active ? currentTime : 0, playerDuration, true);\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        // thumbWrapper: 'voice-note-slider-thumb-wrapper',\n                        thumb: 'voice-note-slider-thumb'\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e33e8791554f674a437f.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount,\n    showChatUnreadMessageIcon\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.target.blur();\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) onClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper,\n            src\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        if (onClose) onClose();\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={messageId || editMessageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { readImageSize } from '../../Utils/Common';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, open } = this.props;\n        if (open && open !== prevProps.open) {\n            this.file = null;\n            this.media = null;\n\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return;\n\n            const { content } = message;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (!text && !caption) return;\n\n            setTimeout(() => {\n                const element = this.captionRef.current;\n                if (!element) return;\n\n                if (text) {\n                    this.setFormattedText(text);\n                } else if (caption) {\n                    this.setFormattedText(caption);\n                } else {\n                    element.innerText = null;\n                }\n\n                focusInput(element);\n            }, 0);\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, onDone } = this.props;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        let content = null;\n        if (this.file) {\n            readImageSize(this.file, result => {\n                content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: result.name, data: result },\n                    width: result.photoWidth,\n                    height: result.photoHeight,\n                    caption\n                };\n                onDone(null, content);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            });\n            this.file = null;\n        } else {\n            onDone(caption, null);\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, onCancel } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.file = file;\n            this.getMediaFromFile(file, result => {\n                this.media = result;\n                this.forceUpdate();\n            });\n        });\n\n        element.value = '';\n    };\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    getMediaFromFile(file, callback) {\n        if (!file) {\n            callback(null);\n        }\n\n        if (file.type.startsWith('image')) {\n            readImageSize(file, result => {\n                const fileId = -this.getRandomInt(1, 1000000);\n                FileStore.setBlob(fileId, result);\n\n                callback({\n                    '@type': 'messagePhoto',\n                    photo: {\n                        '@type': 'photo',\n                        has_stickers: false,\n                        minithumbnail: null,\n                        sizes: [\n                            {\n                                '@type': 'photoSize',\n                                photo: { '@type': 'file', id: fileId },\n                                width: result.photoWidth,\n                                height: result.photoHeight\n                            }\n                        ]\n                    }\n                });\n            });\n        } else {\n            callback(null);\n        }\n    }\n\n    render() {\n        const { classes, chatId, messageId, open, t } = this.props;\n        if (!open) return null;\n\n        const { defaultText, defaultUrl, openEditUrl } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const media = getMedia({ content: this.media }) || getMedia(message, null);\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    <IconButton\n                        disableRipple={true}\n                        aria-label={t('Edit')}\n                        className='edit-media-dialog-edit-button'\n                        size='small'\n                        onClick={this.handleEditMedia}>\n                        <EditIcon fontSize='inherit' />\n                    </IconButton>\n                    <input\n                        ref={this.editMediaRef}\n                        className='inputbox-attach-button'\n                        type='file'\n                        accept='image/*'\n                        onChange={this.handleEditMediaComplete}\n                    />\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Edit')}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    open: PropTypes.bool\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia: messageId !== 0 && isEditedMedia(chatId, messageId)\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    this.focusInput();\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        innerHTML = innerHTML.replace(/<div><br><\\/div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<\\/div>/gi, '');\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText, result => {});\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        const files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        const files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else if (replyToMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.setState({ files });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    async editMessageMedia(content, callback) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        // console.log('[em] editMessageMedia send', content);\n        const result = await TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n\n        callback(result);\n    }\n\n    async editMessageCaption(caption, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        const result = await TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n\n        callback(result);\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleDoneEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content, () => {});\n            return;\n        }\n\n        this.editMessageCaption(caption, () => {});\n    };\n\n    closeEditMediaDialog() {\n        this.setState(\n            {\n                openEditMedia: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    onDone={this.handleDoneEditMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = AppStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragParams } = this.state;\n\n        return (\n            <>\n                {dragParams && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            canCopyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateEditMessage',\n                        chatId: message.chat_id,\n                        messageId: message.id\n                    });\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId: message.chat_id,\n                    messageId: message.id\n                });\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaperSrc } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaperSrc !== wallpaperSrc) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n    }\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper, src } = update;\n\n        this.setState({\n            wallpaper,\n            wallpaperSrc: src\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount, wallpaperSrc } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        let style = null;\n        if (wallpaperSrc) {\n            style = {\n                backgroundImage: `url(${wallpaperSrc})`,\n                // transition: 'background-image .25s ease'\n            }\n        }\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })} style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}